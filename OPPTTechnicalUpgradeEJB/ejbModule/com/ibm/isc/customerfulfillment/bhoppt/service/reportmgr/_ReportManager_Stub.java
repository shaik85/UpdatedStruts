// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr;

import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.CompareTPReportCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ContractAmendmentReportCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ContractAttachmentReportCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ContractPlanningReportCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.DeletedSWOReportCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.DeletedUsersReportCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.InventoryListReportCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ListEntitledPricesReportCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ProposalCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ReportsCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ReverificationReportCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.SysplexReportCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.VarianceRptCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.exception.ServiceException;
import com.ibm.isc.customerfulfillment.bhoppt.util.customdto.BaseAgreementReportCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.util.customdto.BaseAgreementReportsCustomDTO;
import java.lang.Object;
import java.lang.String;
import java.lang.Throwable;
import java.rmi.RemoteException;
import java.rmi.UnexpectedException;
import javax.ejb.EJBHome;
import javax.ejb.EJBObject;
import javax.ejb.Handle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Stub;
import javax.rmi.CORBA.Util;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.ApplicationException;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.RemarshalException;
import org.omg.CORBA.portable.ServantObject;

public class _ReportManager_Stub extends Stub implements ReportManager {
    
    private static final String[] _type_ids = {
        "RMI:com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager:0000000000000000", 
        "RMI:javax.ejb.EJBObject:0000000000000000"
    };
    
    public String[] _ids() { 
        return (String [] )  _type_ids.clone();
    }
    
    public EJBHome getEJBHome() throws RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                InputStream in = null;
                try {
                    try {
                        OutputStream out = _request("_get_EJBHome", true);
                        in = _invoke(out);
                        return (EJBHome) in.read_Object(EJBHome.class);
                    } catch (ApplicationException ex) {
                        in = ex.getInputStream();
                        String id = in.read_string();
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("_get_EJBHome",javax.ejb.EJBObject.class);
                if (so == null) {
                    continue;
                }
                try {
                    EJBHome result = ((javax.ejb.EJBObject)so.servant).getEJBHome();
                    return (EJBHome)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public Object getPrimaryKey() throws RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                InputStream in = null;
                try {
                    try {
                        OutputStream out = _request("_get_primaryKey", true);
                        in = _invoke(out);
                        return Util.readAny(in);
                    } catch (ApplicationException ex) {
                        in = ex.getInputStream();
                        String id = in.read_string();
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("_get_primaryKey",javax.ejb.EJBObject.class);
                if (so == null) {
                    continue;
                }
                try {
                    Object result = ((javax.ejb.EJBObject)so.servant).getPrimaryKey();
                    return (Object)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void remove() throws RemoteException, RemoveException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        OutputStream out = _request("remove", true);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:javax/ejb/RemoveEx:1.0")) {
                            throw (RemoveException) in.read_value(RemoveException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("remove",javax.ejb.EJBObject.class);
                if (so == null) {
                    continue;
                }
                try {
                    ((javax.ejb.EJBObject)so.servant).remove();
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof RemoveException) {
                        throw (RemoveException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public Handle getHandle() throws RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        OutputStream out = _request("_get_handle", true);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (Handle) in.read_abstract_interface(Handle.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("_get_handle",javax.ejb.EJBObject.class);
                if (so == null) {
                    continue;
                }
                try {
                    Handle result = ((javax.ejb.EJBObject)so.servant).getHandle();
                    return (Handle)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public boolean isIdentical(EJBObject arg0) throws RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                InputStream in = null;
                try {
                    try {
                        OutputStream out = _request("isIdentical", true);
                        Util.writeRemoteObject(out,arg0);
                        in = _invoke(out);
                        return in.read_boolean();
                    } catch (ApplicationException ex) {
                        in = ex.getInputStream();
                        String id = in.read_string();
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("isIdentical",javax.ejb.EJBObject.class);
                if (so == null) {
                    continue;
                }
                try {
                    EJBObject arg0Copy = (EJBObject) Util.copyObject(arg0,_orb());
                    return ((javax.ejb.EJBObject)so.servant).isIdentical(arg0Copy);
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ContractAttachmentReportCustomDTO getContractAttachRpt(ContractAttachmentReportCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getContractAttachRpt", true);
                        out.write_value(arg0,ContractAttachmentReportCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ContractAttachmentReportCustomDTO) in.read_value(ContractAttachmentReportCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getContractAttachRpt",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ContractAttachmentReportCustomDTO arg0Copy = (ContractAttachmentReportCustomDTO) Util.copyObject(arg0,_orb());
                    ContractAttachmentReportCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).getContractAttachRpt(arg0Copy);
                    return (ContractAttachmentReportCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ContractPlanningReportCustomDTO getContractPlanningRpt(ContractPlanningReportCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getContractPlanningRpt", true);
                        out.write_value(arg0,ContractPlanningReportCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ContractPlanningReportCustomDTO) in.read_value(ContractPlanningReportCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getContractPlanningRpt",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ContractPlanningReportCustomDTO arg0Copy = (ContractPlanningReportCustomDTO) Util.copyObject(arg0,_orb());
                    ContractPlanningReportCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).getContractPlanningRpt(arg0Copy);
                    return (ContractPlanningReportCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ReportsCustomDTO listProposals(ReportsCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("listProposals", true);
                        out.write_value(arg0,ReportsCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ReportsCustomDTO) in.read_value(ReportsCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("listProposals",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ReportsCustomDTO arg0Copy = (ReportsCustomDTO) Util.copyObject(arg0,_orb());
                    ReportsCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).listProposals(arg0Copy);
                    return (ReportsCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ContractAmendmentReportCustomDTO getContractAmdRpt(ContractAmendmentReportCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getContractAmdRpt", true);
                        out.write_value(arg0,ContractAmendmentReportCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ContractAmendmentReportCustomDTO) in.read_value(ContractAmendmentReportCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getContractAmdRpt",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ContractAmendmentReportCustomDTO arg0Copy = (ContractAmendmentReportCustomDTO) Util.copyObject(arg0,_orb());
                    ContractAmendmentReportCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).getContractAmdRpt(arg0Copy);
                    return (ContractAmendmentReportCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public CompareTPReportCustomDTO getCompareTPRpt(CompareTPReportCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getCompareTPRpt", true);
                        out.write_value(arg0,CompareTPReportCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (CompareTPReportCustomDTO) in.read_value(CompareTPReportCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getCompareTPRpt",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    CompareTPReportCustomDTO arg0Copy = (CompareTPReportCustomDTO) Util.copyObject(arg0,_orb());
                    CompareTPReportCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).getCompareTPRpt(arg0Copy);
                    return (CompareTPReportCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public VarianceRptCustomDTO getVarianceAllRpt(VarianceRptCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getVarianceAllRpt", true);
                        out.write_value(arg0,VarianceRptCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (VarianceRptCustomDTO) in.read_value(VarianceRptCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getVarianceAllRpt",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    VarianceRptCustomDTO arg0Copy = (VarianceRptCustomDTO) Util.copyObject(arg0,_orb());
                    VarianceRptCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).getVarianceAllRpt(arg0Copy);
                    return (VarianceRptCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public VarianceRptCustomDTO getVariancePriceRpt(VarianceRptCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getVariancePriceRpt", true);
                        out.write_value(arg0,VarianceRptCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (VarianceRptCustomDTO) in.read_value(VarianceRptCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getVariancePriceRpt",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    VarianceRptCustomDTO arg0Copy = (VarianceRptCustomDTO) Util.copyObject(arg0,_orb());
                    VarianceRptCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).getVariancePriceRpt(arg0Copy);
                    return (VarianceRptCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public DeletedSWOReportCustomDTO getDeletedSWORpt(DeletedSWOReportCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getDeletedSWORpt", true);
                        out.write_value(arg0,DeletedSWOReportCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (DeletedSWOReportCustomDTO) in.read_value(DeletedSWOReportCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getDeletedSWORpt",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    DeletedSWOReportCustomDTO arg0Copy = (DeletedSWOReportCustomDTO) Util.copyObject(arg0,_orb());
                    DeletedSWOReportCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).getDeletedSWORpt(arg0Copy);
                    return (DeletedSWOReportCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ListEntitledPricesReportCustomDTO getListEntitledRpt(ListEntitledPricesReportCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getListEntitledRpt", true);
                        out.write_value(arg0,ListEntitledPricesReportCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ListEntitledPricesReportCustomDTO) in.read_value(ListEntitledPricesReportCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getListEntitledRpt",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ListEntitledPricesReportCustomDTO arg0Copy = (ListEntitledPricesReportCustomDTO) Util.copyObject(arg0,_orb());
                    ListEntitledPricesReportCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).getListEntitledRpt(arg0Copy);
                    return (ListEntitledPricesReportCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public InventoryListReportCustomDTO getInventoryListRpt(InventoryListReportCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getInventoryListRpt", true);
                        out.write_value(arg0,InventoryListReportCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (InventoryListReportCustomDTO) in.read_value(InventoryListReportCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getInventoryListRpt",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    InventoryListReportCustomDTO arg0Copy = (InventoryListReportCustomDTO) Util.copyObject(arg0,_orb());
                    InventoryListReportCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).getInventoryListRpt(arg0Copy);
                    return (InventoryListReportCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public SysplexReportCustomDTO getSysplexRpt(SysplexReportCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getSysplexRpt", true);
                        out.write_value(arg0,SysplexReportCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (SysplexReportCustomDTO) in.read_value(SysplexReportCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getSysplexRpt",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    SysplexReportCustomDTO arg0Copy = (SysplexReportCustomDTO) Util.copyObject(arg0,_orb());
                    SysplexReportCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).getSysplexRpt(arg0Copy);
                    return (SysplexReportCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public boolean checkForDownload(ProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("checkForDownload", true);
                        out.write_value(arg0,ProposalCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return in.read_boolean();
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("checkForDownload",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalCustomDTO arg0Copy = (ProposalCustomDTO) Util.copyObject(arg0,_orb());
                    return ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).checkForDownload(arg0Copy);
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ReverificationReportCustomDTO getReverificationReport(ReverificationReportCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getReverificationReport", true);
                        out.write_value(arg0,ReverificationReportCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ReverificationReportCustomDTO) in.read_value(ReverificationReportCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getReverificationReport",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ReverificationReportCustomDTO arg0Copy = (ReverificationReportCustomDTO) Util.copyObject(arg0,_orb());
                    ReverificationReportCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).getReverificationReport(arg0Copy);
                    return (ReverificationReportCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public DeletedUsersReportCustomDTO getdeletedUsersReport(DeletedUsersReportCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getdeletedUsersReport", true);
                        out.write_value(arg0,DeletedUsersReportCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (DeletedUsersReportCustomDTO) in.read_value(DeletedUsersReportCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getdeletedUsersReport",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    DeletedUsersReportCustomDTO arg0Copy = (DeletedUsersReportCustomDTO) Util.copyObject(arg0,_orb());
                    DeletedUsersReportCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).getdeletedUsersReport(arg0Copy);
                    return (DeletedUsersReportCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public BaseAgreementReportsCustomDTO getAllBAReports(BaseAgreementReportCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getAllBAReports", true);
                        out.write_value(arg0,BaseAgreementReportCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (BaseAgreementReportsCustomDTO) in.read_value(BaseAgreementReportsCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getAllBAReports",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    BaseAgreementReportCustomDTO arg0Copy = (BaseAgreementReportCustomDTO) Util.copyObject(arg0,_orb());
                    BaseAgreementReportsCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).getAllBAReports(arg0Copy);
                    return (BaseAgreementReportsCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public BaseAgreementReportsCustomDTO getAllBAModificationReports(BaseAgreementReportCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getAllBAModificationReports", true);
                        out.write_value(arg0,BaseAgreementReportCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (BaseAgreementReportsCustomDTO) in.read_value(BaseAgreementReportsCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getAllBAModificationReports",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    BaseAgreementReportCustomDTO arg0Copy = (BaseAgreementReportCustomDTO) Util.copyObject(arg0,_orb());
                    BaseAgreementReportsCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).getAllBAModificationReports(arg0Copy);
                    return (BaseAgreementReportsCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public BaseAgreementReportsCustomDTO getBAReportsbyFormNumbers(BaseAgreementReportCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getBAReportsbyFormNumbers", true);
                        out.write_value(arg0,BaseAgreementReportCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (BaseAgreementReportsCustomDTO) in.read_value(BaseAgreementReportsCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getBAReportsbyFormNumbers",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    BaseAgreementReportCustomDTO arg0Copy = (BaseAgreementReportCustomDTO) Util.copyObject(arg0,_orb());
                    BaseAgreementReportsCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).getBAReportsbyFormNumbers(arg0Copy);
                    return (BaseAgreementReportsCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public BaseAgreementReportsCustomDTO getBAReportsbyModTypes(BaseAgreementReportCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getBAReportsbyModTypes", true);
                        out.write_value(arg0,BaseAgreementReportCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (BaseAgreementReportsCustomDTO) in.read_value(BaseAgreementReportsCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getBAReportsbyModTypes",com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    BaseAgreementReportCustomDTO arg0Copy = (BaseAgreementReportCustomDTO) Util.copyObject(arg0,_orb());
                    BaseAgreementReportsCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.reportmgr.ReportManager)so.servant).getBAReportsbyModTypes(arg0Copy);
                    return (BaseAgreementReportsCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
}
