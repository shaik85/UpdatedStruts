// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.ibm.isc.customerfulfillment.bhoppt.service.pcm;

import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.AddCustomerCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.AlternatePartnerCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.AmendContractCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.AmendSWOCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.BasicProposalCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.CloseContractCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ConfigureDMCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ContractCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.CopyBumpDMCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.CopyBumpSWOCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.CopyCustomerCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.CopyDMCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.CopyProposalCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.CopyReplacementCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.CopySWOCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.DeleteCustomerListCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.DeleteInventoryCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.DeleteProposalCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.DeltaFetchCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.EASIICopyCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.EditCustomerCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.EditDMCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.EditInventoryCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.EditSWOCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ErrorHistoryCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ExtendContractCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.FetchCustomerListCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.FetchCustomersCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.FetchPartnerInformationCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.IncludeExcludeSWOCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.IneligibleLicensesCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.InventoryCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.InventoryDateRangeCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.OPPTCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.PlannedInventoryCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.PrintProposalCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ProposalCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ProposalCustomerCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ProposalDetailsCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ProposalFormDataCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ProposalHeaderCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ProposalHistoryCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ProposalsForApprovalCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.QuotesListCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.RegistrationCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.RejectProposalCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ReleaseLockOnProposalCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.RenewContractCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ReplaceContractCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.SAndSDetailsCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.SAndSPlanningCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.SWODetailsCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ShareProposalCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.StatusCheckCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.TransferProposalsCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.UserContractsCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.UserCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.UserProposalsCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ValidateTPProposalCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.VarianceCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.VarianceHeaderInformationCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.exception.ServiceException;
import java.io.Serializable;
import java.lang.Object;
import java.lang.String;
import java.lang.Throwable;
import java.rmi.RemoteException;
import java.rmi.UnexpectedException;
import java.util.List;
import javax.ejb.EJBHome;
import javax.ejb.EJBObject;
import javax.ejb.Handle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Stub;
import javax.rmi.CORBA.Util;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.ApplicationException;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.RemarshalException;
import org.omg.CORBA.portable.ServantObject;

public class _ProposalManager_Stub extends Stub implements ProposalManager {
    
    private static final String[] _type_ids = {
        "RMI:com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager:0000000000000000", 
        "RMI:javax.ejb.EJBObject:0000000000000000"
    };
    
    public String[] _ids() { 
        return (String [] )  _type_ids.clone();
    }
    
    public EJBHome getEJBHome() throws RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                InputStream in = null;
                try {
                    try {
                        OutputStream out = _request("_get_EJBHome", true);
                        in = _invoke(out);
                        return (EJBHome) in.read_Object(EJBHome.class);
                    } catch (ApplicationException ex) {
                        in = ex.getInputStream();
                        String id = in.read_string();
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("_get_EJBHome",javax.ejb.EJBObject.class);
                if (so == null) {
                    continue;
                }
                try {
                    EJBHome result = ((javax.ejb.EJBObject)so.servant).getEJBHome();
                    return (EJBHome)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public Object getPrimaryKey() throws RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                InputStream in = null;
                try {
                    try {
                        OutputStream out = _request("_get_primaryKey", true);
                        in = _invoke(out);
                        return Util.readAny(in);
                    } catch (ApplicationException ex) {
                        in = ex.getInputStream();
                        String id = in.read_string();
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("_get_primaryKey",javax.ejb.EJBObject.class);
                if (so == null) {
                    continue;
                }
                try {
                    Object result = ((javax.ejb.EJBObject)so.servant).getPrimaryKey();
                    return (Object)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void remove() throws RemoteException, RemoveException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        OutputStream out = _request("remove", true);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:javax/ejb/RemoveEx:1.0")) {
                            throw (RemoveException) in.read_value(RemoveException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("remove",javax.ejb.EJBObject.class);
                if (so == null) {
                    continue;
                }
                try {
                    ((javax.ejb.EJBObject)so.servant).remove();
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof RemoveException) {
                        throw (RemoveException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public Handle getHandle() throws RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        OutputStream out = _request("_get_handle", true);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (Handle) in.read_abstract_interface(Handle.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("_get_handle",javax.ejb.EJBObject.class);
                if (so == null) {
                    continue;
                }
                try {
                    Handle result = ((javax.ejb.EJBObject)so.servant).getHandle();
                    return (Handle)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public boolean isIdentical(EJBObject arg0) throws RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                InputStream in = null;
                try {
                    try {
                        OutputStream out = _request("isIdentical", true);
                        Util.writeRemoteObject(out,arg0);
                        in = _invoke(out);
                        return in.read_boolean();
                    } catch (ApplicationException ex) {
                        in = ex.getInputStream();
                        String id = in.read_string();
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("isIdentical",javax.ejb.EJBObject.class);
                if (so == null) {
                    continue;
                }
                try {
                    EJBObject arg0Copy = (EJBObject) Util.copyObject(arg0,_orb());
                    return ((javax.ejb.EJBObject)so.servant).isIdentical(arg0Copy);
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ProposalFormDataCustomDTO getProposalFormData() throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        OutputStream out = _request("getProposalFormData", true);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ProposalFormDataCustomDTO) in.read_value(ProposalFormDataCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getProposalFormData",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalFormDataCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).getProposalFormData();
                    return (ProposalFormDataCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ProposalHeaderCustomDTO validateProposalHeader(ProposalHeaderCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("validateProposalHeader", true);
                        out.write_value(arg0,ProposalHeaderCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ProposalHeaderCustomDTO) in.read_value(ProposalHeaderCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("validateProposalHeader",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalHeaderCustomDTO arg0Copy = (ProposalHeaderCustomDTO) Util.copyObject(arg0,_orb());
                    ProposalHeaderCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).validateProposalHeader(arg0Copy);
                    return (ProposalHeaderCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public BasicProposalCustomDTO validateComplexContractIdentifiers(BasicProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("validateComplexContractIdentifiers", true);
                        out.write_value(arg0,BasicProposalCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (BasicProposalCustomDTO) in.read_value(BasicProposalCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("validateComplexContractIdentifiers",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    BasicProposalCustomDTO arg0Copy = (BasicProposalCustomDTO) Util.copyObject(arg0,_orb());
                    BasicProposalCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).validateComplexContractIdentifiers(arg0Copy);
                    return (BasicProposalCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void throwExceptionForService(String arg0, int arg1) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("throwExceptionForService", true);
                        out.write_value(arg0,String.class);
                        out.write_long(arg1);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("throwExceptionForService",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).throwExceptionForService(arg0, arg1);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public InventoryCustomDTO fetchInventory(InventoryCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("fetchInventory", true);
                        out.write_value(arg0,InventoryCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (InventoryCustomDTO) in.read_value(InventoryCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("fetchInventory",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    InventoryCustomDTO arg0Copy = (InventoryCustomDTO) Util.copyObject(arg0,_orb());
                    InventoryCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).fetchInventory(arg0Copy);
                    return (InventoryCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public FetchCustomersCustomDTO fetchCustomes(FetchCustomersCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("fetchCustomes", true);
                        out.write_value(arg0,FetchCustomersCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (FetchCustomersCustomDTO) in.read_value(FetchCustomersCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("fetchCustomes",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    FetchCustomersCustomDTO arg0Copy = (FetchCustomersCustomDTO) Util.copyObject(arg0,_orb());
                    FetchCustomersCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).fetchCustomes(arg0Copy);
                    return (FetchCustomersCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public FetchPartnerInformationCustomDTO fetchPartnerInformationForCustomer(FetchPartnerInformationCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("fetchPartnerInformationForCustomer", true);
                        out.write_value(arg0,FetchPartnerInformationCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (FetchPartnerInformationCustomDTO) in.read_value(FetchPartnerInformationCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("fetchPartnerInformationForCustomer",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    FetchPartnerInformationCustomDTO arg0Copy = (FetchPartnerInformationCustomDTO) Util.copyObject(arg0,_orb());
                    FetchPartnerInformationCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).fetchPartnerInformationForCustomer(arg0Copy);
                    return (FetchPartnerInformationCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public IneligibleLicensesCustomDTO fetchIneligibleInventory(IneligibleLicensesCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("fetchIneligibleInventory", true);
                        out.write_value(arg0,IneligibleLicensesCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (IneligibleLicensesCustomDTO) in.read_value(IneligibleLicensesCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("fetchIneligibleInventory",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    IneligibleLicensesCustomDTO arg0Copy = (IneligibleLicensesCustomDTO) Util.copyObject(arg0,_orb());
                    IneligibleLicensesCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).fetchIneligibleInventory(arg0Copy);
                    return (IneligibleLicensesCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public InventoryDateRangeCustomDTO initiateFetchPlannedInventory(InventoryDateRangeCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("initiateFetchPlannedInventory", true);
                        out.write_value(arg0,InventoryDateRangeCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (InventoryDateRangeCustomDTO) in.read_value(InventoryDateRangeCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("initiateFetchPlannedInventory",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    InventoryDateRangeCustomDTO arg0Copy = (InventoryDateRangeCustomDTO) Util.copyObject(arg0,_orb());
                    InventoryDateRangeCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).initiateFetchPlannedInventory(arg0Copy);
                    return (InventoryDateRangeCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public QuotesListCustomDTO fetchPlannedInventory(QuotesListCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("fetchPlannedInventory", true);
                        out.write_value(arg0,QuotesListCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (QuotesListCustomDTO) in.read_value(QuotesListCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("fetchPlannedInventory",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    QuotesListCustomDTO arg0Copy = (QuotesListCustomDTO) Util.copyObject(arg0,_orb());
                    QuotesListCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).fetchPlannedInventory(arg0Copy);
                    return (QuotesListCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public PlannedInventoryCustomDTO addPlannedInventory(PlannedInventoryCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("addPlannedInventory", true);
                        out.write_value(arg0,PlannedInventoryCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (PlannedInventoryCustomDTO) in.read_value(PlannedInventoryCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("addPlannedInventory",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    PlannedInventoryCustomDTO arg0Copy = (PlannedInventoryCustomDTO) Util.copyObject(arg0,_orb());
                    PlannedInventoryCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).addPlannedInventory(arg0Copy);
                    return (PlannedInventoryCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public IneligibleLicensesCustomDTO addIneligibleInventoryToProposal(IneligibleLicensesCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("addIneligibleInventoryToProposal", true);
                        out.write_value(arg0,IneligibleLicensesCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (IneligibleLicensesCustomDTO) in.read_value(IneligibleLicensesCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("addIneligibleInventoryToProposal",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    IneligibleLicensesCustomDTO arg0Copy = (IneligibleLicensesCustomDTO) Util.copyObject(arg0,_orb());
                    IneligibleLicensesCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).addIneligibleInventoryToProposal(arg0Copy);
                    return (IneligibleLicensesCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public UserCustomDTO checkForRemovingUser(UserCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("checkForRemovingUser", true);
                        out.write_value(arg0,UserCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (UserCustomDTO) in.read_value(UserCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("checkForRemovingUser",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    UserCustomDTO arg0Copy = (UserCustomDTO) Util.copyObject(arg0,_orb());
                    UserCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).checkForRemovingUser(arg0Copy);
                    return (UserCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void updateProposalWithGroupName(String arg0, String arg1) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("updateProposalWithGroupName", true);
                        out.write_value(arg0,String.class);
                        out.write_value(arg1,String.class);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("updateProposalWithGroupName",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).updateProposalWithGroupName(arg0, arg1);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public FetchPartnerInformationCustomDTO fetchPartnerInformationForBP(FetchPartnerInformationCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("fetchPartnerInformationForBP", true);
                        out.write_value(arg0,FetchPartnerInformationCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (FetchPartnerInformationCustomDTO) in.read_value(FetchPartnerInformationCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("fetchPartnerInformationForBP",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    FetchPartnerInformationCustomDTO arg0Copy = (FetchPartnerInformationCustomDTO) Util.copyObject(arg0,_orb());
                    FetchPartnerInformationCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).fetchPartnerInformationForBP(arg0Copy);
                    return (FetchPartnerInformationCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public FetchCustomerListCustomDTO fetchCustomerListsForBP(FetchCustomerListCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("fetchCustomerListsForBP", true);
                        out.write_value(arg0,FetchCustomerListCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (FetchCustomerListCustomDTO) in.read_value(FetchCustomerListCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("fetchCustomerListsForBP",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    FetchCustomerListCustomDTO arg0Copy = (FetchCustomerListCustomDTO) Util.copyObject(arg0,_orb());
                    FetchCustomerListCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).fetchCustomerListsForBP(arg0Copy);
                    return (FetchCustomerListCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public AlternatePartnerCustomDTO fetchAlternatePartner(AlternatePartnerCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("fetchAlternatePartner", true);
                        out.write_value(arg0,AlternatePartnerCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (AlternatePartnerCustomDTO) in.read_value(AlternatePartnerCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("fetchAlternatePartner",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    AlternatePartnerCustomDTO arg0Copy = (AlternatePartnerCustomDTO) Util.copyObject(arg0,_orb());
                    AlternatePartnerCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).fetchAlternatePartner(arg0Copy);
                    return (AlternatePartnerCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ProposalHeaderCustomDTO saveProposal(ProposalHeaderCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("saveProposal", true);
                        out.write_value(arg0,ProposalHeaderCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ProposalHeaderCustomDTO) in.read_value(ProposalHeaderCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("saveProposal",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalHeaderCustomDTO arg0Copy = (ProposalHeaderCustomDTO) Util.copyObject(arg0,_orb());
                    ProposalHeaderCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).saveProposal(arg0Copy);
                    return (ProposalHeaderCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ProposalDetailsCustomDTO fetchProposalDetails(ProposalDetailsCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("fetchProposalDetails", true);
                        out.write_value(arg0,ProposalDetailsCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ProposalDetailsCustomDTO) in.read_value(ProposalDetailsCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("fetchProposalDetails",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalDetailsCustomDTO arg0Copy = (ProposalDetailsCustomDTO) Util.copyObject(arg0,_orb());
                    ProposalDetailsCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).fetchProposalDetails(arg0Copy);
                    return (ProposalDetailsCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public CopyProposalCustomDTO copyProposal(CopyProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("copyProposal", true);
                        out.write_value(arg0,CopyProposalCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (CopyProposalCustomDTO) in.read_value(CopyProposalCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("copyProposal",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    CopyProposalCustomDTO arg0Copy = (CopyProposalCustomDTO) Util.copyObject(arg0,_orb());
                    CopyProposalCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).copyProposal(arg0Copy);
                    return (CopyProposalCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ExtendContractCustomDTO extendContract(ExtendContractCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("extendContract", true);
                        out.write_value(arg0,ExtendContractCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ExtendContractCustomDTO) in.read_value(ExtendContractCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("extendContract",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ExtendContractCustomDTO arg0Copy = (ExtendContractCustomDTO) Util.copyObject(arg0,_orb());
                    ExtendContractCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).extendContract(arg0Copy);
                    return (ExtendContractCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ExtendContractCustomDTO submitExtendContract(ExtendContractCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("submitExtendContract", true);
                        out.write_value(arg0,ExtendContractCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ExtendContractCustomDTO) in.read_value(ExtendContractCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("submitExtendContract",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ExtendContractCustomDTO arg0Copy = (ExtendContractCustomDTO) Util.copyObject(arg0,_orb());
                    ExtendContractCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).submitExtendContract(arg0Copy);
                    return (ExtendContractCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ReplaceContractCustomDTO getHeaderForReplacement(ReplaceContractCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getHeaderForReplacement", true);
                        out.write_value(arg0,ReplaceContractCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ReplaceContractCustomDTO) in.read_value(ReplaceContractCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getHeaderForReplacement",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ReplaceContractCustomDTO arg0Copy = (ReplaceContractCustomDTO) Util.copyObject(arg0,_orb());
                    ReplaceContractCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).getHeaderForReplacement(arg0Copy);
                    return (ReplaceContractCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public CopyReplacementCustomDTO copyReplaceContract(CopyReplacementCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("copyReplaceContract", true);
                        out.write_value(arg0,CopyReplacementCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (CopyReplacementCustomDTO) in.read_value(CopyReplacementCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("copyReplaceContract",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    CopyReplacementCustomDTO arg0Copy = (CopyReplacementCustomDTO) Util.copyObject(arg0,_orb());
                    CopyReplacementCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).copyReplaceContract(arg0Copy);
                    return (CopyReplacementCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public RenewContractCustomDTO renewContract(RenewContractCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("renewContract", true);
                        out.write_value(arg0,RenewContractCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (RenewContractCustomDTO) in.read_value(RenewContractCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("renewContract",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    RenewContractCustomDTO arg0Copy = (RenewContractCustomDTO) Util.copyObject(arg0,_orb());
                    RenewContractCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).renewContract(arg0Copy);
                    return (RenewContractCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public RenewContractCustomDTO enterRenewContractInfo(RenewContractCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("enterRenewContractInfo", true);
                        out.write_value(arg0,RenewContractCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (RenewContractCustomDTO) in.read_value(RenewContractCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("enterRenewContractInfo",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    RenewContractCustomDTO arg0Copy = (RenewContractCustomDTO) Util.copyObject(arg0,_orb());
                    RenewContractCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).enterRenewContractInfo(arg0Copy);
                    return (RenewContractCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public AmendContractCustomDTO amendContract(AmendContractCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("amendContract", true);
                        out.write_value(arg0,AmendContractCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (AmendContractCustomDTO) in.read_value(AmendContractCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("amendContract",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    AmendContractCustomDTO arg0Copy = (AmendContractCustomDTO) Util.copyObject(arg0,_orb());
                    AmendContractCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).amendContract(arg0Copy);
                    return (AmendContractCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public AmendContractCustomDTO processAmendContract(AmendContractCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("processAmendContract", true);
                        out.write_value(arg0,AmendContractCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (AmendContractCustomDTO) in.read_value(AmendContractCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("processAmendContract",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    AmendContractCustomDTO arg0Copy = (AmendContractCustomDTO) Util.copyObject(arg0,_orb());
                    AmendContractCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).processAmendContract(arg0Copy);
                    return (AmendContractCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ValidateTPProposalCustomDTO validateTPProposal(ValidateTPProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("validateTPProposal", true);
                        out.write_value(arg0,ValidateTPProposalCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ValidateTPProposalCustomDTO) in.read_value(ValidateTPProposalCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("validateTPProposal",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ValidateTPProposalCustomDTO arg0Copy = (ValidateTPProposalCustomDTO) Util.copyObject(arg0,_orb());
                    ValidateTPProposalCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).validateTPProposal(arg0Copy);
                    return (ValidateTPProposalCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ContractCustomDTO canEASIICopyPerformed(ContractCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("canEASIICopyPerformed", true);
                        out.write_value(arg0,ContractCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ContractCustomDTO) in.read_value(ContractCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("canEASIICopyPerformed",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ContractCustomDTO arg0Copy = (ContractCustomDTO) Util.copyObject(arg0,_orb());
                    ContractCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).canEASIICopyPerformed(arg0Copy);
                    return (ContractCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public EASIICopyCustomDTO easIICopy(EASIICopyCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("easIICopy", true);
                        out.write_value(arg0,EASIICopyCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (EASIICopyCustomDTO) in.read_value(EASIICopyCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("easIICopy",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    EASIICopyCustomDTO arg0Copy = (EASIICopyCustomDTO) Util.copyObject(arg0,_orb());
                    EASIICopyCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).easIICopy(arg0Copy);
                    return (EASIICopyCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ReplaceContractCustomDTO validateReplacementDate(ReplaceContractCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("validateReplacementDate", true);
                        out.write_value(arg0,ReplaceContractCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ReplaceContractCustomDTO) in.read_value(ReplaceContractCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("validateReplacementDate",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ReplaceContractCustomDTO arg0Copy = (ReplaceContractCustomDTO) Util.copyObject(arg0,_orb());
                    ReplaceContractCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).validateReplacementDate(arg0Copy);
                    return (ReplaceContractCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public CopyBumpDMCustomDTO copyBumpInventory(CopyBumpDMCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("copyBumpInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_CopyBumpDMCustomDTO", true);
                        out.write_value(arg0,CopyBumpDMCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (CopyBumpDMCustomDTO) in.read_value(CopyBumpDMCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("copyBumpInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_CopyBumpDMCustomDTO",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    CopyBumpDMCustomDTO arg0Copy = (CopyBumpDMCustomDTO) Util.copyObject(arg0,_orb());
                    CopyBumpDMCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).copyBumpInventory(arg0Copy);
                    return (CopyBumpDMCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public CopyBumpDMCustomDTO saveCopyBumpDM(CopyBumpDMCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("saveCopyBumpDM", true);
                        out.write_value(arg0,CopyBumpDMCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (CopyBumpDMCustomDTO) in.read_value(CopyBumpDMCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("saveCopyBumpDM",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    CopyBumpDMCustomDTO arg0Copy = (CopyBumpDMCustomDTO) Util.copyObject(arg0,_orb());
                    CopyBumpDMCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).saveCopyBumpDM(arg0Copy);
                    return (CopyBumpDMCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public CopyBumpSWOCustomDTO copyBumpInventory(CopyBumpSWOCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("copyBumpInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_CopyBumpSWOCustomDTO", true);
                        out.write_value(arg0,CopyBumpSWOCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (CopyBumpSWOCustomDTO) in.read_value(CopyBumpSWOCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("copyBumpInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_CopyBumpSWOCustomDTO",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    CopyBumpSWOCustomDTO arg0Copy = (CopyBumpSWOCustomDTO) Util.copyObject(arg0,_orb());
                    CopyBumpSWOCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).copyBumpInventory(arg0Copy);
                    return (CopyBumpSWOCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public CopyBumpSWOCustomDTO saveCopyBumpSWO(CopyBumpSWOCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("saveCopyBumpSWO", true);
                        out.write_value(arg0,CopyBumpSWOCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (CopyBumpSWOCustomDTO) in.read_value(CopyBumpSWOCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("saveCopyBumpSWO",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    CopyBumpSWOCustomDTO arg0Copy = (CopyBumpSWOCustomDTO) Util.copyObject(arg0,_orb());
                    CopyBumpSWOCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).saveCopyBumpSWO(arg0Copy);
                    return (CopyBumpSWOCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ProposalCustomDTO canDeltaFetchBePerformed(ProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("canDeltaFetchBePerformed", true);
                        out.write_value(arg0,ProposalCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ProposalCustomDTO) in.read_value(ProposalCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("canDeltaFetchBePerformed",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalCustomDTO arg0Copy = (ProposalCustomDTO) Util.copyObject(arg0,_orb());
                    ProposalCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).canDeltaFetchBePerformed(arg0Copy);
                    return (ProposalCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public DeltaFetchCustomDTO deltaFetch(DeltaFetchCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("deltaFetch", true);
                        out.write_value(arg0,DeltaFetchCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (DeltaFetchCustomDTO) in.read_value(DeltaFetchCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("deltaFetch",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    DeltaFetchCustomDTO arg0Copy = (DeltaFetchCustomDTO) Util.copyObject(arg0,_orb());
                    DeltaFetchCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).deltaFetch(arg0Copy);
                    return (DeltaFetchCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public EditCustomerCustomDTO editInventory(EditCustomerCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("editInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_EditCustomerCustomDTO", true);
                        out.write_value(arg0,EditCustomerCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (EditCustomerCustomDTO) in.read_value(EditCustomerCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("editInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_EditCustomerCustomDTO",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    EditCustomerCustomDTO arg0Copy = (EditCustomerCustomDTO) Util.copyObject(arg0,_orb());
                    EditCustomerCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).editInventory(arg0Copy);
                    return (EditCustomerCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public EditDMCustomDTO editInventory(EditDMCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("editInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_EditDMCustomDTO", true);
                        out.write_value(arg0,EditDMCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (EditDMCustomDTO) in.read_value(EditDMCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("editInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_EditDMCustomDTO",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    EditDMCustomDTO arg0Copy = (EditDMCustomDTO) Util.copyObject(arg0,_orb());
                    EditDMCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).editInventory(arg0Copy);
                    return (EditDMCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public EditSWOCustomDTO editInventory(EditSWOCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("editInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_EditSWOCustomDTO", true);
                        out.write_value(arg0,EditSWOCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (EditSWOCustomDTO) in.read_value(EditSWOCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("editInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_EditSWOCustomDTO",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    EditSWOCustomDTO arg0Copy = (EditSWOCustomDTO) Util.copyObject(arg0,_orb());
                    EditSWOCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).editInventory(arg0Copy);
                    return (EditSWOCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public EditInventoryCustomDTO editInventory(EditInventoryCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("editInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_EditInventoryCustomDTO", true);
                        out.write_value(arg0,EditInventoryCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (EditInventoryCustomDTO) in.read_value(EditInventoryCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("editInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_EditInventoryCustomDTO",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    EditInventoryCustomDTO arg0Copy = (EditInventoryCustomDTO) Util.copyObject(arg0,_orb());
                    EditInventoryCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).editInventory(arg0Copy);
                    return (EditInventoryCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public EditDMCustomDTO saveEditDM(EditDMCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("saveEditDM", true);
                        out.write_value(arg0,EditDMCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (EditDMCustomDTO) in.read_value(EditDMCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("saveEditDM",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    EditDMCustomDTO arg0Copy = (EditDMCustomDTO) Util.copyObject(arg0,_orb());
                    EditDMCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).saveEditDM(arg0Copy);
                    return (EditDMCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public EditCustomerCustomDTO saveEditCustomer(EditCustomerCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("saveEditCustomer", true);
                        out.write_value(arg0,EditCustomerCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (EditCustomerCustomDTO) in.read_value(EditCustomerCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("saveEditCustomer",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    EditCustomerCustomDTO arg0Copy = (EditCustomerCustomDTO) Util.copyObject(arg0,_orb());
                    EditCustomerCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).saveEditCustomer(arg0Copy);
                    return (EditCustomerCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public EditSWOCustomDTO saveEditSWO(EditSWOCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("saveEditSWO", true);
                        out.write_value(arg0,EditSWOCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (EditSWOCustomDTO) in.read_value(EditSWOCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("saveEditSWO",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    EditSWOCustomDTO arg0Copy = (EditSWOCustomDTO) Util.copyObject(arg0,_orb());
                    EditSWOCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).saveEditSWO(arg0Copy);
                    return (EditSWOCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public EditInventoryCustomDTO saveInventory(EditInventoryCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("saveInventory", true);
                        out.write_value(arg0,EditInventoryCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (EditInventoryCustomDTO) in.read_value(EditInventoryCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("saveInventory",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    EditInventoryCustomDTO arg0Copy = (EditInventoryCustomDTO) Util.copyObject(arg0,_orb());
                    EditInventoryCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).saveInventory(arg0Copy);
                    return (EditInventoryCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public VarianceCustomDTO createOrSimulateVariance(VarianceCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("createOrSimulateVariance", true);
                        out.write_value(arg0,VarianceCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (VarianceCustomDTO) in.read_value(VarianceCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("createOrSimulateVariance",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    VarianceCustomDTO arg0Copy = (VarianceCustomDTO) Util.copyObject(arg0,_orb());
                    VarianceCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).createOrSimulateVariance(arg0Copy);
                    return (VarianceCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public VarianceCustomDTO processVariance(VarianceCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("processVariance", true);
                        out.write_value(arg0,VarianceCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (VarianceCustomDTO) in.read_value(VarianceCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("processVariance",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    VarianceCustomDTO arg0Copy = (VarianceCustomDTO) Util.copyObject(arg0,_orb());
                    VarianceCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).processVariance(arg0Copy);
                    return (VarianceCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public VarianceHeaderInformationCustomDTO checkVariance(VarianceHeaderInformationCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("checkVariance", true);
                        out.write_value(arg0,VarianceHeaderInformationCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (VarianceHeaderInformationCustomDTO) in.read_value(VarianceHeaderInformationCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("checkVariance",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    VarianceHeaderInformationCustomDTO arg0Copy = (VarianceHeaderInformationCustomDTO) Util.copyObject(arg0,_orb());
                    VarianceHeaderInformationCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).checkVariance(arg0Copy);
                    return (VarianceHeaderInformationCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public List checkForProposalsForCreateApprove(String arg0, String arg1) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("checkForProposalsForCreateApprove", true);
                        out.write_value(arg0,String.class);
                        out.write_value(arg1,String.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (List) in.read_value(List.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("checkForProposalsForCreateApprove",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    List result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).checkForProposalsForCreateApprove(arg0, arg1);
                    return (List)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public DeleteInventoryCustomDTO deleteInventory(DeleteInventoryCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("deleteInventory", true);
                        out.write_value(arg0,DeleteInventoryCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (DeleteInventoryCustomDTO) in.read_value(DeleteInventoryCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("deleteInventory",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    DeleteInventoryCustomDTO arg0Copy = (DeleteInventoryCustomDTO) Util.copyObject(arg0,_orb());
                    DeleteInventoryCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).deleteInventory(arg0Copy);
                    return (DeleteInventoryCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public List checkForProposalsForApproverAndManager(String arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("checkForProposalsForApproverAndManager", true);
                        out.write_value(arg0,String.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (List) in.read_value(List.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("checkForProposalsForApproverAndManager",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    List result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).checkForProposalsForApproverAndManager(arg0);
                    return (List)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public List checkForProposalsForCSOAndMarkAndManager(String arg0, String arg1) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("checkForProposalsForCSOAndMarkAndManager", true);
                        out.write_value(arg0,String.class);
                        out.write_value(arg1,String.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (List) in.read_value(List.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("checkForProposalsForCSOAndMarkAndManager",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    List result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).checkForProposalsForCSOAndMarkAndManager(arg0, arg1);
                    return (List)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public RegistrationCustomDTO getRegistrationData(RegistrationCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getRegistrationData", true);
                        out.write_value(arg0,RegistrationCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (RegistrationCustomDTO) in.read_value(RegistrationCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getRegistrationData",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    RegistrationCustomDTO arg0Copy = (RegistrationCustomDTO) Util.copyObject(arg0,_orb());
                    RegistrationCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).getRegistrationData(arg0Copy);
                    return (RegistrationCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public RegistrationCustomDTO proposalRegistration(RegistrationCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("proposalRegistration", true);
                        out.write_value(arg0,RegistrationCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (RegistrationCustomDTO) in.read_value(RegistrationCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("proposalRegistration",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    RegistrationCustomDTO arg0Copy = (RegistrationCustomDTO) Util.copyObject(arg0,_orb());
                    RegistrationCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).proposalRegistration(arg0Copy);
                    return (RegistrationCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void renameProposal(ProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("renameProposal", true);
                        out.write_value(arg0,ProposalCustomDTO.class);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("renameProposal",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalCustomDTO arg0Copy = (ProposalCustomDTO) Util.copyObject(arg0,_orb());
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).renameProposal(arg0Copy);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void deleteProposalContract(DeleteProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("deleteProposalContract", true);
                        out.write_value(arg0,DeleteProposalCustomDTO.class);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("deleteProposalContract",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    DeleteProposalCustomDTO arg0Copy = (DeleteProposalCustomDTO) Util.copyObject(arg0,_orb());
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).deleteProposalContract(arg0Copy);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public UserProposalsCustomDTO listAllProposalsOfUser(UserProposalsCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("listAllProposalsOfUser", true);
                        out.write_value(arg0,UserProposalsCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (UserProposalsCustomDTO) in.read_value(UserProposalsCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("listAllProposalsOfUser",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    UserProposalsCustomDTO arg0Copy = (UserProposalsCustomDTO) Util.copyObject(arg0,_orb());
                    UserProposalsCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).listAllProposalsOfUser(arg0Copy);
                    return (UserProposalsCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ProposalHistoryCustomDTO getProposalHistory(ProposalHistoryCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getProposalHistory", true);
                        out.write_value(arg0,ProposalHistoryCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ProposalHistoryCustomDTO) in.read_value(ProposalHistoryCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getProposalHistory",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalHistoryCustomDTO arg0Copy = (ProposalHistoryCustomDTO) Util.copyObject(arg0,_orb());
                    ProposalHistoryCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).getProposalHistory(arg0Copy);
                    return (ProposalHistoryCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ReleaseLockOnProposalCustomDTO releaseLockOnProposal(ReleaseLockOnProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("releaseLockOnProposal", true);
                        out.write_value(arg0,ReleaseLockOnProposalCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ReleaseLockOnProposalCustomDTO) in.read_value(ReleaseLockOnProposalCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("releaseLockOnProposal",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ReleaseLockOnProposalCustomDTO arg0Copy = (ReleaseLockOnProposalCustomDTO) Util.copyObject(arg0,_orb());
                    ReleaseLockOnProposalCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).releaseLockOnProposal(arg0Copy);
                    return (ReleaseLockOnProposalCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public UserContractsCustomDTO listAllContractsOfUser(UserContractsCustomDTO arg0, boolean arg1) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("listAllContractsOfUser", true);
                        out.write_value(arg0,UserContractsCustomDTO.class);
                        out.write_boolean(arg1);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (UserContractsCustomDTO) in.read_value(UserContractsCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("listAllContractsOfUser",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    UserContractsCustomDTO arg0Copy = (UserContractsCustomDTO) Util.copyObject(arg0,_orb());
                    UserContractsCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).listAllContractsOfUser(arg0Copy, arg1);
                    return (UserContractsCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ErrorHistoryCustomDTO viewErrorHistory(ErrorHistoryCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("viewErrorHistory", true);
                        out.write_value(arg0,ErrorHistoryCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ErrorHistoryCustomDTO) in.read_value(ErrorHistoryCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("viewErrorHistory",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ErrorHistoryCustomDTO arg0Copy = (ErrorHistoryCustomDTO) Util.copyObject(arg0,_orb());
                    ErrorHistoryCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).viewErrorHistory(arg0Copy);
                    return (ErrorHistoryCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void deleteErrorHistory(ErrorHistoryCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("deleteErrorHistory", true);
                        out.write_value(arg0,ErrorHistoryCustomDTO.class);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("deleteErrorHistory",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ErrorHistoryCustomDTO arg0Copy = (ErrorHistoryCustomDTO) Util.copyObject(arg0,_orb());
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).deleteErrorHistory(arg0Copy);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ProposalCustomDTO priceProposal(ProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("priceProposal", true);
                        out.write_value(arg0,ProposalCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ProposalCustomDTO) in.read_value(ProposalCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("priceProposal",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalCustomDTO arg0Copy = (ProposalCustomDTO) Util.copyObject(arg0,_orb());
                    ProposalCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).priceProposal(arg0Copy);
                    return (ProposalCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void lockProposal(ProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("lockProposal", true);
                        out.write_value(arg0,ProposalCustomDTO.class);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("lockProposal",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalCustomDTO arg0Copy = (ProposalCustomDTO) Util.copyObject(arg0,_orb());
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).lockProposal(arg0Copy);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void releaseProposal(ProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("releaseProposal", true);
                        out.write_value(arg0,ProposalCustomDTO.class);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("releaseProposal",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalCustomDTO arg0Copy = (ProposalCustomDTO) Util.copyObject(arg0,_orb());
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).releaseProposal(arg0Copy);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public StatusCheckCustomDTO checkProposalStatus(StatusCheckCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("checkProposalStatus", true);
                        out.write_value(arg0,StatusCheckCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (StatusCheckCustomDTO) in.read_value(StatusCheckCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("checkProposalStatus",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    StatusCheckCustomDTO arg0Copy = (StatusCheckCustomDTO) Util.copyObject(arg0,_orb());
                    StatusCheckCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).checkProposalStatus(arg0Copy);
                    return (StatusCheckCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public CopyCustomerCustomDTO copyCustomerInventory(CopyCustomerCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("copyCustomerInventory", true);
                        out.write_value(arg0,CopyCustomerCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (CopyCustomerCustomDTO) in.read_value(CopyCustomerCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("copyCustomerInventory",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    CopyCustomerCustomDTO arg0Copy = (CopyCustomerCustomDTO) Util.copyObject(arg0,_orb());
                    CopyCustomerCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).copyCustomerInventory(arg0Copy);
                    return (CopyCustomerCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public CopyDMCustomDTO copyDMInventory(CopyDMCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("copyDMInventory", true);
                        out.write_value((Serializable)arg0,CopyDMCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (CopyDMCustomDTO) in.read_value(CopyDMCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("copyDMInventory",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    CopyDMCustomDTO arg0Copy = (CopyDMCustomDTO) Util.copyObject(arg0,_orb());
                    CopyDMCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).copyDMInventory(arg0Copy);
                    return (CopyDMCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public CopySWOCustomDTO copySWOInventory(CopySWOCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("copySWOInventory", true);
                        out.write_value(arg0,CopySWOCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (CopySWOCustomDTO) in.read_value(CopySWOCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("copySWOInventory",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    CopySWOCustomDTO arg0Copy = (CopySWOCustomDTO) Util.copyObject(arg0,_orb());
                    CopySWOCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).copySWOInventory(arg0Copy);
                    return (CopySWOCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public CopyCustomerCustomDTO copyInventory(CopyCustomerCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("copyInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_CopyCustomerCustomDTO", true);
                        out.write_value(arg0,CopyCustomerCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (CopyCustomerCustomDTO) in.read_value(CopyCustomerCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("copyInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_CopyCustomerCustomDTO",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    CopyCustomerCustomDTO arg0Copy = (CopyCustomerCustomDTO) Util.copyObject(arg0,_orb());
                    CopyCustomerCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).copyInventory(arg0Copy);
                    return (CopyCustomerCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public CopyDMCustomDTO copyInventory(CopyDMCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("copyInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_CopyDMCustomDTO", true);
                        out.write_value((Serializable)arg0,CopyDMCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (CopyDMCustomDTO) in.read_value(CopyDMCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("copyInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_CopyDMCustomDTO",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    CopyDMCustomDTO arg0Copy = (CopyDMCustomDTO) Util.copyObject(arg0,_orb());
                    CopyDMCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).copyInventory(arg0Copy);
                    return (CopyDMCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public CopySWOCustomDTO copyInventory(CopySWOCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("copyInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_CopySWOCustomDTO", true);
                        out.write_value(arg0,CopySWOCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (CopySWOCustomDTO) in.read_value(CopySWOCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("copyInventory__com_ibm_isc_customerfulfillment_bhoppt_projectutilities_dto_customdto_CopySWOCustomDTO",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    CopySWOCustomDTO arg0Copy = (CopySWOCustomDTO) Util.copyObject(arg0,_orb());
                    CopySWOCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).copyInventory(arg0Copy);
                    return (CopySWOCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public AmendSWOCustomDTO amendSWO(AmendSWOCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("amendSWO", true);
                        out.write_value(arg0,AmendSWOCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (AmendSWOCustomDTO) in.read_value(AmendSWOCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("amendSWO",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    AmendSWOCustomDTO arg0Copy = (AmendSWOCustomDTO) Util.copyObject(arg0,_orb());
                    AmendSWOCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).amendSWO(arg0Copy);
                    return (AmendSWOCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ConfigureDMCustomDTO retrieveDM(ConfigureDMCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("retrieveDM", true);
                        out.write_value(arg0,ConfigureDMCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ConfigureDMCustomDTO) in.read_value(ConfigureDMCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("retrieveDM",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ConfigureDMCustomDTO arg0Copy = (ConfigureDMCustomDTO) Util.copyObject(arg0,_orb());
                    ConfigureDMCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).retrieveDM(arg0Copy);
                    return (ConfigureDMCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ConfigureDMCustomDTO retrieveEEConfigWhenConfigureDM(ConfigureDMCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("retrieveEEConfigWhenConfigureDM", true);
                        out.write_value(arg0,ConfigureDMCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ConfigureDMCustomDTO) in.read_value(ConfigureDMCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("retrieveEEConfigWhenConfigureDM",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ConfigureDMCustomDTO arg0Copy = (ConfigureDMCustomDTO) Util.copyObject(arg0,_orb());
                    ConfigureDMCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).retrieveEEConfigWhenConfigureDM(arg0Copy);
                    return (ConfigureDMCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ConfigureDMCustomDTO copyConfigToSWOsWhenConfigureDM(ConfigureDMCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("copyConfigToSWOsWhenConfigureDM", true);
                        out.write_value(arg0,ConfigureDMCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ConfigureDMCustomDTO) in.read_value(ConfigureDMCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("copyConfigToSWOsWhenConfigureDM",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ConfigureDMCustomDTO arg0Copy = (ConfigureDMCustomDTO) Util.copyObject(arg0,_orb());
                    ConfigureDMCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).copyConfigToSWOsWhenConfigureDM(arg0Copy);
                    return (ConfigureDMCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ConfigureDMCustomDTO validateConfigWhenConfigureDM(ConfigureDMCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("validateConfigWhenConfigureDM", true);
                        out.write_value(arg0,ConfigureDMCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ConfigureDMCustomDTO) in.read_value(ConfigureDMCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("validateConfigWhenConfigureDM",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ConfigureDMCustomDTO arg0Copy = (ConfigureDMCustomDTO) Util.copyObject(arg0,_orb());
                    ConfigureDMCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).validateConfigWhenConfigureDM(arg0Copy);
                    return (ConfigureDMCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ConfigureDMCustomDTO fetchPriceWhenConfigureDM(ConfigureDMCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("fetchPriceWhenConfigureDM", true);
                        out.write_value(arg0,ConfigureDMCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ConfigureDMCustomDTO) in.read_value(ConfigureDMCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("fetchPriceWhenConfigureDM",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ConfigureDMCustomDTO arg0Copy = (ConfigureDMCustomDTO) Util.copyObject(arg0,_orb());
                    ConfigureDMCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).fetchPriceWhenConfigureDM(arg0Copy);
                    return (ConfigureDMCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ConfigureDMCustomDTO cancelConfigureDM(ConfigureDMCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("cancelConfigureDM", true);
                        out.write_value(arg0,ConfigureDMCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ConfigureDMCustomDTO) in.read_value(ConfigureDMCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("cancelConfigureDM",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ConfigureDMCustomDTO arg0Copy = (ConfigureDMCustomDTO) Util.copyObject(arg0,_orb());
                    ConfigureDMCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).cancelConfigureDM(arg0Copy);
                    return (ConfigureDMCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void deleteTempValues(OPPTCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("deleteTempValues", true);
                        out.write_value(arg0,OPPTCustomDTO.class);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("deleteTempValues",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    OPPTCustomDTO arg0Copy = (OPPTCustomDTO) Util.copyObject(arg0,_orb());
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).deleteTempValues(arg0Copy);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public VarianceHeaderInformationCustomDTO deleteTempVarianceValues(VarianceHeaderInformationCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("deleteTempVarianceValues", true);
                        out.write_value(arg0,VarianceHeaderInformationCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (VarianceHeaderInformationCustomDTO) in.read_value(VarianceHeaderInformationCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("deleteTempVarianceValues",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    VarianceHeaderInformationCustomDTO arg0Copy = (VarianceHeaderInformationCustomDTO) Util.copyObject(arg0,_orb());
                    VarianceHeaderInformationCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).deleteTempVarianceValues(arg0Copy);
                    return (VarianceHeaderInformationCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public TransferProposalsCustomDTO getTargetUsers(TransferProposalsCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getTargetUsers", true);
                        out.write_value(arg0,TransferProposalsCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (TransferProposalsCustomDTO) in.read_value(TransferProposalsCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getTargetUsers",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    TransferProposalsCustomDTO arg0Copy = (TransferProposalsCustomDTO) Util.copyObject(arg0,_orb());
                    TransferProposalsCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).getTargetUsers(arg0Copy);
                    return (TransferProposalsCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public TransferProposalsCustomDTO transferProposals(TransferProposalsCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("transferProposals", true);
                        out.write_value(arg0,TransferProposalsCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (TransferProposalsCustomDTO) in.read_value(TransferProposalsCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("transferProposals",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    TransferProposalsCustomDTO arg0Copy = (TransferProposalsCustomDTO) Util.copyObject(arg0,_orb());
                    TransferProposalsCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).transferProposals(arg0Copy);
                    return (TransferProposalsCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ProposalsForApprovalCustomDTO listProposalsForApproval(ProposalsForApprovalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("listProposalsForApproval", true);
                        out.write_value(arg0,ProposalsForApprovalCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ProposalsForApprovalCustomDTO) in.read_value(ProposalsForApprovalCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("listProposalsForApproval",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalsForApprovalCustomDTO arg0Copy = (ProposalsForApprovalCustomDTO) Util.copyObject(arg0,_orb());
                    ProposalsForApprovalCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).listProposalsForApproval(arg0Copy);
                    return (ProposalsForApprovalCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ProposalHeaderCustomDTO getHeaderInformation(ProposalHeaderCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getHeaderInformation", true);
                        out.write_value(arg0,ProposalHeaderCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ProposalHeaderCustomDTO) in.read_value(ProposalHeaderCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getHeaderInformation",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalHeaderCustomDTO arg0Copy = (ProposalHeaderCustomDTO) Util.copyObject(arg0,_orb());
                    ProposalHeaderCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).getHeaderInformation(arg0Copy);
                    return (ProposalHeaderCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public AddCustomerCustomDTO addSelectedCustomers(AddCustomerCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("addSelectedCustomers", true);
                        out.write_value(arg0,AddCustomerCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (AddCustomerCustomDTO) in.read_value(AddCustomerCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("addSelectedCustomers",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    AddCustomerCustomDTO arg0Copy = (AddCustomerCustomDTO) Util.copyObject(arg0,_orb());
                    AddCustomerCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).addSelectedCustomers(arg0Copy);
                    return (AddCustomerCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public AddCustomerCustomDTO getProposalCustomers(AddCustomerCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getProposalCustomers", true);
                        out.write_value(arg0,AddCustomerCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (AddCustomerCustomDTO) in.read_value(AddCustomerCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getProposalCustomers",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    AddCustomerCustomDTO arg0Copy = (AddCustomerCustomDTO) Util.copyObject(arg0,_orb());
                    AddCustomerCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).getProposalCustomers(arg0Copy);
                    return (AddCustomerCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ShareProposalCustomDTO getEligibleUserToShareProposal(ShareProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getEligibleUserToShareProposal", true);
                        out.write_value(arg0,ShareProposalCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ShareProposalCustomDTO) in.read_value(ShareProposalCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getEligibleUserToShareProposal",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ShareProposalCustomDTO arg0Copy = (ShareProposalCustomDTO) Util.copyObject(arg0,_orb());
                    ShareProposalCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).getEligibleUserToShareProposal(arg0Copy);
                    return (ShareProposalCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ShareProposalCustomDTO shareProposal(ShareProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("shareProposal", true);
                        out.write_value(arg0,ShareProposalCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ShareProposalCustomDTO) in.read_value(ShareProposalCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("shareProposal",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ShareProposalCustomDTO arg0Copy = (ShareProposalCustomDTO) Util.copyObject(arg0,_orb());
                    ShareProposalCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).shareProposal(arg0Copy);
                    return (ShareProposalCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ShareProposalCustomDTO removeShare(ShareProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("removeShare", true);
                        out.write_value(arg0,ShareProposalCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ShareProposalCustomDTO) in.read_value(ShareProposalCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("removeShare",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ShareProposalCustomDTO arg0Copy = (ShareProposalCustomDTO) Util.copyObject(arg0,_orb());
                    ShareProposalCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).removeShare(arg0Copy);
                    return (ShareProposalCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void canProposalBeCopied(ProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("canProposalBeCopied", true);
                        out.write_value(arg0,ProposalCustomDTO.class);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("canProposalBeCopied",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalCustomDTO arg0Copy = (ProposalCustomDTO) Util.copyObject(arg0,_orb());
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).canProposalBeCopied(arg0Copy);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public PrintProposalCustomDTO printProposal(PrintProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("printProposal", true);
                        out.write_value(arg0,PrintProposalCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (PrintProposalCustomDTO) in.read_value(PrintProposalCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("printProposal",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    PrintProposalCustomDTO arg0Copy = (PrintProposalCustomDTO) Util.copyObject(arg0,_orb());
                    PrintProposalCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).printProposal(arg0Copy);
                    return (PrintProposalCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public SWODetailsCustomDTO getSWODetails(SWODetailsCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getSWODetails", true);
                        out.write_value(arg0,SWODetailsCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (SWODetailsCustomDTO) in.read_value(SWODetailsCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getSWODetails",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    SWODetailsCustomDTO arg0Copy = (SWODetailsCustomDTO) Util.copyObject(arg0,_orb());
                    SWODetailsCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).getSWODetails(arg0Copy);
                    return (SWODetailsCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void saveSWODetails(SWODetailsCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("saveSWODetails", true);
                        out.write_value(arg0,SWODetailsCustomDTO.class);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("saveSWODetails",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    SWODetailsCustomDTO arg0Copy = (SWODetailsCustomDTO) Util.copyObject(arg0,_orb());
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).saveSWODetails(arg0Copy);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ProposalCustomDTO removeSVCLicenses(ProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("removeSVCLicenses", true);
                        out.write_value(arg0,ProposalCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ProposalCustomDTO) in.read_value(ProposalCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("removeSVCLicenses",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalCustomDTO arg0Copy = (ProposalCustomDTO) Util.copyObject(arg0,_orb());
                    ProposalCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).removeSVCLicenses(arg0Copy);
                    return (ProposalCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ProposalCustomerCustomDTO retrieveCustomerDetails(ProposalCustomerCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("retrieveCustomerDetails", true);
                        out.write_value(arg0,ProposalCustomerCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ProposalCustomerCustomDTO) in.read_value(ProposalCustomerCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("retrieveCustomerDetails",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalCustomerCustomDTO arg0Copy = (ProposalCustomerCustomDTO) Util.copyObject(arg0,_orb());
                    ProposalCustomerCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).retrieveCustomerDetails(arg0Copy);
                    return (ProposalCustomerCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void excludeIncludeSWO(IncludeExcludeSWOCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("excludeIncludeSWO", true);
                        out.write_value(arg0,IncludeExcludeSWOCustomDTO.class);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("excludeIncludeSWO",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    IncludeExcludeSWOCustomDTO arg0Copy = (IncludeExcludeSWOCustomDTO) Util.copyObject(arg0,_orb());
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).excludeIncludeSWO(arg0Copy);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void revertProposal(ContractCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("revertProposal", true);
                        out.write_value(arg0,ContractCustomDTO.class);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("revertProposal",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ContractCustomDTO arg0Copy = (ContractCustomDTO) Util.copyObject(arg0,_orb());
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).revertProposal(arg0Copy);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public CloseContractCustomDTO closeContract(CloseContractCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("closeContract", true);
                        out.write_value(arg0,CloseContractCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (CloseContractCustomDTO) in.read_value(CloseContractCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("closeContract",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    CloseContractCustomDTO arg0Copy = (CloseContractCustomDTO) Util.copyObject(arg0,_orb());
                    CloseContractCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).closeContract(arg0Copy);
                    return (CloseContractCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void rejectRequest(RejectProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("rejectRequest", true);
                        out.write_value(arg0,RejectProposalCustomDTO.class);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("rejectRequest",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    RejectProposalCustomDTO arg0Copy = (RejectProposalCustomDTO) Util.copyObject(arg0,_orb());
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).rejectRequest(arg0Copy);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public VarianceHeaderInformationCustomDTO createVarianceProposal(VarianceHeaderInformationCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("createVarianceProposal", true);
                        out.write_value(arg0,VarianceHeaderInformationCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (VarianceHeaderInformationCustomDTO) in.read_value(VarianceHeaderInformationCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("createVarianceProposal",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    VarianceHeaderInformationCustomDTO arg0Copy = (VarianceHeaderInformationCustomDTO) Util.copyObject(arg0,_orb());
                    VarianceHeaderInformationCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).createVarianceProposal(arg0Copy);
                    return (VarianceHeaderInformationCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void approveRequest(ProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("approveRequest", true);
                        out.write_value(arg0,ProposalCustomDTO.class);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("approveRequest",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalCustomDTO arg0Copy = (ProposalCustomDTO) Util.copyObject(arg0,_orb());
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).approveRequest(arg0Copy);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void deleteCustomerList(DeleteCustomerListCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("deleteCustomerList", true);
                        out.write_value(arg0,DeleteCustomerListCustomDTO.class);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("deleteCustomerList",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    DeleteCustomerListCustomDTO arg0Copy = (DeleteCustomerListCustomDTO) Util.copyObject(arg0,_orb());
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).deleteCustomerList(arg0Copy);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void removeQuotes(ProposalCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("removeQuotes", true);
                        out.write_value(arg0,ProposalCustomDTO.class);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("removeQuotes",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ProposalCustomDTO arg0Copy = (ProposalCustomDTO) Util.copyObject(arg0,_orb());
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).removeQuotes(arg0Copy);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public SAndSDetailsCustomDTO fetchSAndSDetails(SAndSDetailsCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("fetchSAndSDetails", true);
                        out.write_value(arg0,SAndSDetailsCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (SAndSDetailsCustomDTO) in.read_value(SAndSDetailsCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("fetchSAndSDetails",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    SAndSDetailsCustomDTO arg0Copy = (SAndSDetailsCustomDTO) Util.copyObject(arg0,_orb());
                    SAndSDetailsCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).fetchSAndSDetails(arg0Copy);
                    return (SAndSDetailsCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void applySAndSDiscount(SAndSPlanningCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("applySAndSDiscount", true);
                        out.write_value(arg0,SAndSPlanningCustomDTO.class);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("applySAndSDiscount",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    SAndSPlanningCustomDTO arg0Copy = (SAndSPlanningCustomDTO) Util.copyObject(arg0,_orb());
                    ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).applySAndSDiscount(arg0Copy);
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public FetchCustomerListCustomDTO fetchSiteIDLists(FetchCustomerListCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("fetchSiteIDLists", true);
                        out.write_value(arg0,FetchCustomerListCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (FetchCustomerListCustomDTO) in.read_value(FetchCustomerListCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("fetchSiteIDLists",com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    FetchCustomerListCustomDTO arg0Copy = (FetchCustomerListCustomDTO) Util.copyObject(arg0,_orb());
                    FetchCustomerListCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.pcm.ProposalManager)so.servant).fetchSiteIDLists(arg0Copy);
                    return (FetchCustomerListCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
}
