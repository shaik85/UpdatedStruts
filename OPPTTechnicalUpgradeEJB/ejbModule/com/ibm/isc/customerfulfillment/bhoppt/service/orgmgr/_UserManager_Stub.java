// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr;

import com.ibm.isc.customerfulfillment.bhoppt.domain.dto.UserProfileDomainDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ActivityLogCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.BPUserCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.CreateUserCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.NonBPUserCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.ReverificationCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.SigninCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.UserCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.dto.customdto.UsersCustomDTO;
import com.ibm.isc.customerfulfillment.bhoppt.projectutilities.exception.ServiceException;
import java.lang.Object;
import java.lang.String;
import java.lang.Throwable;
import java.rmi.RemoteException;
import java.rmi.UnexpectedException;
import javax.ejb.EJBHome;
import javax.ejb.EJBObject;
import javax.ejb.Handle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Stub;
import javax.rmi.CORBA.Util;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.ApplicationException;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.RemarshalException;
import org.omg.CORBA.portable.ServantObject;

public class _UserManager_Stub extends Stub implements UserManager {
    
    private static final String[] _type_ids = {
        "RMI:com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager:0000000000000000", 
        "RMI:javax.ejb.EJBObject:0000000000000000"
    };
    
    public String[] _ids() { 
        return (String [] )  _type_ids.clone();
    }
    
    public EJBHome getEJBHome() throws RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                InputStream in = null;
                try {
                    try {
                        OutputStream out = _request("_get_EJBHome", true);
                        in = _invoke(out);
                        return (EJBHome) in.read_Object(EJBHome.class);
                    } catch (ApplicationException ex) {
                        in = ex.getInputStream();
                        String id = in.read_string();
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("_get_EJBHome",javax.ejb.EJBObject.class);
                if (so == null) {
                    continue;
                }
                try {
                    EJBHome result = ((javax.ejb.EJBObject)so.servant).getEJBHome();
                    return (EJBHome)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public Object getPrimaryKey() throws RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                InputStream in = null;
                try {
                    try {
                        OutputStream out = _request("_get_primaryKey", true);
                        in = _invoke(out);
                        return Util.readAny(in);
                    } catch (ApplicationException ex) {
                        in = ex.getInputStream();
                        String id = in.read_string();
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("_get_primaryKey",javax.ejb.EJBObject.class);
                if (so == null) {
                    continue;
                }
                try {
                    Object result = ((javax.ejb.EJBObject)so.servant).getPrimaryKey();
                    return (Object)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public void remove() throws RemoteException, RemoveException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        OutputStream out = _request("remove", true);
                        _invoke(out);
                        return;
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:javax/ejb/RemoveEx:1.0")) {
                            throw (RemoveException) in.read_value(RemoveException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("remove",javax.ejb.EJBObject.class);
                if (so == null) {
                    continue;
                }
                try {
                    ((javax.ejb.EJBObject)so.servant).remove();
                    return;
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof RemoveException) {
                        throw (RemoveException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public Handle getHandle() throws RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        OutputStream out = _request("_get_handle", true);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (Handle) in.read_abstract_interface(Handle.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("_get_handle",javax.ejb.EJBObject.class);
                if (so == null) {
                    continue;
                }
                try {
                    Handle result = ((javax.ejb.EJBObject)so.servant).getHandle();
                    return (Handle)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public boolean isIdentical(EJBObject arg0) throws RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                InputStream in = null;
                try {
                    try {
                        OutputStream out = _request("isIdentical", true);
                        Util.writeRemoteObject(out,arg0);
                        in = _invoke(out);
                        return in.read_boolean();
                    } catch (ApplicationException ex) {
                        in = ex.getInputStream();
                        String id = in.read_string();
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("isIdentical",javax.ejb.EJBObject.class);
                if (so == null) {
                    continue;
                }
                try {
                    EJBObject arg0Copy = (EJBObject) Util.copyObject(arg0,_orb());
                    return ((javax.ejb.EJBObject)so.servant).isIdentical(arg0Copy);
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public BPUserCustomDTO createBPUser(BPUserCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("createBPUser", true);
                        out.write_value(arg0,BPUserCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (BPUserCustomDTO) in.read_value(BPUserCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("createBPUser",com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    BPUserCustomDTO arg0Copy = (BPUserCustomDTO) Util.copyObject(arg0,_orb());
                    BPUserCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager)so.servant).createBPUser(arg0Copy);
                    return (BPUserCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public NonBPUserCustomDTO createNonBPUser(NonBPUserCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("createNonBPUser", true);
                        out.write_value(arg0,NonBPUserCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (NonBPUserCustomDTO) in.read_value(NonBPUserCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("createNonBPUser",com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    NonBPUserCustomDTO arg0Copy = (NonBPUserCustomDTO) Util.copyObject(arg0,_orb());
                    NonBPUserCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager)so.servant).createNonBPUser(arg0Copy);
                    return (NonBPUserCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public CreateUserCustomDTO createNewUser(CreateUserCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("createNewUser", true);
                        out.write_value(arg0,CreateUserCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (CreateUserCustomDTO) in.read_value(CreateUserCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("createNewUser",com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    CreateUserCustomDTO arg0Copy = (CreateUserCustomDTO) Util.copyObject(arg0,_orb());
                    CreateUserCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager)so.servant).createNewUser(arg0Copy);
                    return (CreateUserCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ActivityLogCustomDTO getActivityLog(ActivityLogCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getActivityLog", true);
                        out.write_value(arg0,ActivityLogCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ActivityLogCustomDTO) in.read_value(ActivityLogCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getActivityLog",com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ActivityLogCustomDTO arg0Copy = (ActivityLogCustomDTO) Util.copyObject(arg0,_orb());
                    ActivityLogCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager)so.servant).getActivityLog(arg0Copy);
                    return (ActivityLogCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public BPUserCustomDTO editBPUser(BPUserCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("editBPUser", true);
                        out.write_value(arg0,BPUserCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (BPUserCustomDTO) in.read_value(BPUserCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("editBPUser",com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    BPUserCustomDTO arg0Copy = (BPUserCustomDTO) Util.copyObject(arg0,_orb());
                    BPUserCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager)so.servant).editBPUser(arg0Copy);
                    return (BPUserCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public NonBPUserCustomDTO editNonBPUser(NonBPUserCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("editNonBPUser", true);
                        out.write_value(arg0,NonBPUserCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (NonBPUserCustomDTO) in.read_value(NonBPUserCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("editNonBPUser",com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    NonBPUserCustomDTO arg0Copy = (NonBPUserCustomDTO) Util.copyObject(arg0,_orb());
                    NonBPUserCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager)so.servant).editNonBPUser(arg0Copy);
                    return (NonBPUserCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public UsersCustomDTO listUsersInSalesOrg(UsersCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("listUsersInSalesOrg", true);
                        out.write_value(arg0,UsersCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (UsersCustomDTO) in.read_value(UsersCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("listUsersInSalesOrg",com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    UsersCustomDTO arg0Copy = (UsersCustomDTO) Util.copyObject(arg0,_orb());
                    UsersCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager)so.servant).listUsersInSalesOrg(arg0Copy);
                    return (UsersCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public BPUserCustomDTO registerBPUser(BPUserCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("registerBPUser", true);
                        out.write_value(arg0,BPUserCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (BPUserCustomDTO) in.read_value(BPUserCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("registerBPUser",com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    BPUserCustomDTO arg0Copy = (BPUserCustomDTO) Util.copyObject(arg0,_orb());
                    BPUserCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager)so.servant).registerBPUser(arg0Copy);
                    return (BPUserCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public NonBPUserCustomDTO registerNonBPUser(NonBPUserCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("registerNonBPUser", true);
                        out.write_value(arg0,NonBPUserCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (NonBPUserCustomDTO) in.read_value(NonBPUserCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("registerNonBPUser",com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    NonBPUserCustomDTO arg0Copy = (NonBPUserCustomDTO) Util.copyObject(arg0,_orb());
                    NonBPUserCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager)so.servant).registerNonBPUser(arg0Copy);
                    return (NonBPUserCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public CreateUserCustomDTO processCreateNewUser(CreateUserCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("processCreateNewUser", true);
                        out.write_value(arg0,CreateUserCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (CreateUserCustomDTO) in.read_value(CreateUserCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("processCreateNewUser",com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    CreateUserCustomDTO arg0Copy = (CreateUserCustomDTO) Util.copyObject(arg0,_orb());
                    CreateUserCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager)so.servant).processCreateNewUser(arg0Copy);
                    return (CreateUserCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public BPUserCustomDTO saveEditBPUser(BPUserCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("saveEditBPUser", true);
                        out.write_value(arg0,BPUserCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (BPUserCustomDTO) in.read_value(BPUserCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("saveEditBPUser",com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    BPUserCustomDTO arg0Copy = (BPUserCustomDTO) Util.copyObject(arg0,_orb());
                    BPUserCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager)so.servant).saveEditBPUser(arg0Copy);
                    return (BPUserCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public UserCustomDTO removeUser(UserCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("removeUser", true);
                        out.write_value(arg0,UserCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (UserCustomDTO) in.read_value(UserCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("removeUser",com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    UserCustomDTO arg0Copy = (UserCustomDTO) Util.copyObject(arg0,_orb());
                    UserCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager)so.servant).removeUser(arg0Copy);
                    return (UserCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public NonBPUserCustomDTO saveEditNonBPUser(NonBPUserCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("saveEditNonBPUser", true);
                        out.write_value(arg0,NonBPUserCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (NonBPUserCustomDTO) in.read_value(NonBPUserCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("saveEditNonBPUser",com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    NonBPUserCustomDTO arg0Copy = (NonBPUserCustomDTO) Util.copyObject(arg0,_orb());
                    NonBPUserCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager)so.servant).saveEditNonBPUser(arg0Copy);
                    return (NonBPUserCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public SigninCustomDTO signIn(SigninCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("signIn", true);
                        out.write_value(arg0,SigninCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (SigninCustomDTO) in.read_value(SigninCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("signIn",com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    SigninCustomDTO arg0Copy = (SigninCustomDTO) Util.copyObject(arg0,_orb());
                    SigninCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager)so.servant).signIn(arg0Copy);
                    return (SigninCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public UserProfileDomainDTO getUserProfile(String arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("getUserProfile", true);
                        out.write_value(arg0,String.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (UserProfileDomainDTO) in.read_value(UserProfileDomainDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("getUserProfile",com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    UserProfileDomainDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager)so.servant).getUserProfile(arg0);
                    return (UserProfileDomainDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
    
    public ReverificationCustomDTO listAllSalesOrgs(ReverificationCustomDTO arg0) throws ServiceException, RemoteException {
        while(true) {
            if (!Util.isLocal(this)) {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    try {
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream)
                            _request("listAllSalesOrgs", true);
                        out.write_value(arg0,ReverificationCustomDTO.class);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (ReverificationCustomDTO) in.read_value(ReverificationCustomDTO.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String id = in.read_string();
                        if (id.equals("IDL:com/ibm/isc/customerfulfillment/bhoppt/projectutilities/_exception/ServiceEx:1.0")) {
                            throw (ServiceException) in.read_value(ServiceException.class);
                        }
                        throw new UnexpectedException(id);
                    } catch (RemarshalException ex) {
                        continue;
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                } finally {
                    _releaseReply(in);
                }
            } else {
                ServantObject so = _servant_preinvoke("listAllSalesOrgs",com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager.class);
                if (so == null) {
                    continue;
                }
                try {
                    ReverificationCustomDTO arg0Copy = (ReverificationCustomDTO) Util.copyObject(arg0,_orb());
                    ReverificationCustomDTO result = ((com.ibm.isc.customerfulfillment.bhoppt.service.orgmgr.UserManager)so.servant).listAllSalesOrgs(arg0Copy);
                    return (ReverificationCustomDTO)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof ServiceException) {
                        throw (ServiceException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
}
