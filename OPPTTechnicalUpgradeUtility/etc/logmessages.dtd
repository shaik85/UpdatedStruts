<?xml version='1.0' encoding="UTF-8"?>



<!-- emphasis -->
<!ELEMENT emph (#PCDATA) >
<!-- this is some kind of code -->
<!ELEMENT code (#PCDATA) >
<!-- this is a filename -->
<!ELEMENT fn (#PCDATA) >

<!-- a paragraph -->
<!ELEMENT p (#PCDATA|emph|code|fn|v0|v1|v2|v3|v4|v5|v6|v7|v8|v9)* >

<!-- unordered list -->
<!ELEMENT ul (li+) >

<!-- ordered list -->
<!ELEMENT ol (li+) >

<!-- 
Descriptions are blocks with lists, paragraphs etc.
-->
<!ENTITY % Desc.content	"(ul|ol|p)*" >

<!-- a list item may also kontain paragraphs and lists -->
<!ELEMENT li %Desc.content; >

<!-- title of a documentation node -->
<!ELEMENT title (#PCDATA) >

<!-- content of a documentation node -->
<!ENTITY % Doc.content	"(title,%Desc.content;)" >

<!-- 
Documentation are like Descriptions, but also alow the use of headings (<h1> etc).
-->
<!--
I currently don't know why I use this we will see ....
-->
<!ELEMENT msg-config (msg-list)>

<!-- the list of message groups. It may contain one documentation node
-->
<!ELEMENT msg-list (documentation?,msg-group*)>
<!ATTLIST msg-list
	project CDATA #REQUIRED>

<!-- 
A message group groups together messages that are somehow related. Perhapse they
are from the same class, or they are all related to a special aera in the application 
like configuration or backend access.
This messages then share the same prefix (the attribute id of the msg-group).
-->
<!ELEMENT msg-group (documentation?,msg*)>
<!ATTLIST msg-group
	id ID #REQUIRED
	module CDATA #REQUIRED>
	
<!--
Documentation for the entire message list and for the message groups
-->
<!ELEMENT documentation %Doc.content;>

<!--
Messages are encoded using this tag.
The attribute 'no' holds the message number, the attribute level the severity of
this message. 
The child nodes hold the message text ant the documentation for the message.
NOTE: In a future release the attribute 'level' might become REQUIRED
-->
<!ELEMENT msg (text,variable-list?,description?,related?,system-response?,operator-response?)>
<!ATTLIST msg
	no CDATA #REQUIRED
	id ID #IMPLIED
	level  (debug | info | warn | error | fatal) #REQUIRED>

<!-- 
The text nodes holds the message text. The child nodes (v1..v9) are placeholders 
for the variable parts of the message
-->
<!ELEMENT text (#PCDATA|v0|v1|v2|v3|v4|v5|v6|v7|v8|v9)*>

<!--
The placeholders for the variable parts of the message.
The attribute javaMsgFmt may hold additional informations for the variable 
to be used by the class java.text.MessageFormat
-->
<!ELEMENT v0 EMPTY>
<!ATTLIST v0
	javaMsgFmt CDATA #IMPLIED>
<!ELEMENT v1 EMPTY>
<!ATTLIST v1
	javaMsgFmt CDATA #IMPLIED>
<!ELEMENT v2 EMPTY>
<!ATTLIST v2
	javaMsgFmt CDATA #IMPLIED>
<!ELEMENT v3 EMPTY>
<!ATTLIST v3
	javaMsgFmt CDATA #IMPLIED>
<!ELEMENT v4 EMPTY>
<!ATTLIST v4
	javaMsgFmt CDATA #IMPLIED>
<!ELEMENT v5 EMPTY>
<!ATTLIST v5
	javaMsgFmt CDATA #IMPLIED>
<!ELEMENT v6 EMPTY>
<!ATTLIST v6
	javaMsgFmt CDATA #IMPLIED>
<!ELEMENT v7 EMPTY>
<!ATTLIST v7
	javaMsgFmt CDATA #IMPLIED>
<!ELEMENT v8 EMPTY>
<!ATTLIST v8
	javaMsgFmt CDATA #IMPLIED>
<!ELEMENT v9 EMPTY>
<!ATTLIST v9
	javaMsgFmt CDATA #IMPLIED>

<!--
variable-list and variable are used to document the variables
-->
<!ELEMENT variable-list (variable*)>

<!ELEMENT variable %Desc.content;>
<!ATTLIST variable
	name CDATA #REQUIRED
	no (0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9) #REQUIRED  >

<!--
Plain description of the message and why it occured.
-->
<!ELEMENT description  %Desc.content; >

<!--
Some messages might frequently occure together with other messages.
The tag related and msglink can be used to define links to this related messages.
-->
<!ELEMENT related (msglink)+>

<!ELEMENT msglink EMPTY>
<!ATTLIST msglink
	msg-group CDATA #IMPLIED
	msg-no CDATA #REQUIRED>

<!--
What should the operator/administrator do if he/she sees this message?
-->
<!ELEMENT operator-response
	%Desc.content;
>

<!-- 
In what state is the system or what does the system do after this message occured.
Normally the administrator will first look at the "operator-response" and 
"system-response" to see if the system is still usable and if there is something 
he/she has to do.
-->

<!ELEMENT system-response
	%Desc.content;
>
